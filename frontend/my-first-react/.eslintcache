[{"/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/index.js":"1","/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/reportWebVitals.js":"2","/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/App.js":"3","/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/Badge.js":"4","/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/Badge2.js":"5","/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/components/Card.js":"6","/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/components/Dropdown.js":"7","/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/components/DropdownItem.js":"8"},{"size":500,"mtime":1609562781470,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609562781478,"results":"11","hashOfConfig":"10"},{"size":747,"mtime":1609734367641,"results":"12","hashOfConfig":"10"},{"size":236,"mtime":1609568004154,"results":"13","hashOfConfig":"10"},{"size":927,"mtime":1609570458802,"results":"14","hashOfConfig":"10"},{"size":585,"mtime":1609569660059,"results":"15","hashOfConfig":"10"},{"size":1416,"mtime":1609734345328,"results":"16","hashOfConfig":"10"},{"size":400,"mtime":1609733445603,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1azafov",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/index.js",[],["37","38"],"/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/reportWebVitals.js",[],"/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/App.js",["39","40","41"],"/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/Badge.js",[],"/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/Badge2.js",["42"],"import React, { Component } from 'react'\n\n\nexport default class Badge2 extends Component {\n// right way of using intance variable is by using state line 12\n    // int count = props.count;\n\n    constructor(props) {\n        super(props);\n        console.log('In constructor', props)\n        \n        this.state = {count: props.count};\n      }\n\n    //functionality js\n    handleClick(){\n        console.log('this method will handle click events')\n        console.log(this.state)\n        var newCount = ++this.state.count;\n        this.setState({count: newCount})\n    }\n\n\n    render() {\n\n        //html & css\n        return (\n            <div>\n                 <button onClick={this.handleClick.bind(this)} type=\"button\" className=\"btn btn-primary\">\n                    {this.props.caption} <span className=\"badge bg-secondary\">{this.state.count}</span>\n                </button>\n            </div>\n            \n        )\n    }\n}\n\n","/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/components/Card.js",["43"],"import React, { Component } from 'react'\nimport Badge from '../Badge2'\n\nclass Card extends Component {\n    render() {\n        return (\n            <div class=\"card\" >\n            <img src=\"https://via.placeholder.com/150\" class=\"card-img-top\" alt=\"Image not found\"/>\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">{this.props.title}</h5>\n                    <p class=\"card-text\">{this.props.summary}</p>\n                    <Badge caption=\"Votes\" count=\"3\"></Badge>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Card;\n","/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/components/Dropdown.js",[],"/Users/puneet/work/trainings/cagemini-fsd/frontend/my-first-react/src/components/DropdownItem.js",["44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":12},{"ruleId":"49","severity":1,"message":"53","line":3,"column":8,"nodeType":"51","messageId":"52","endLine":3,"endColumn":13},{"ruleId":"49","severity":1,"message":"54","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":19,"column":26,"nodeType":"57","endLine":19,"endColumn":36},{"ruleId":"58","severity":1,"message":"59","line":8,"column":13,"nodeType":"60","endLine":8,"endColumn":100},{"ruleId":"61","severity":1,"message":"62","line":11,"column":17,"nodeType":"60","endLine":11,"endColumn":93},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Badge' is defined but never used.","'Card' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]